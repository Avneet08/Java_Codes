/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package approject;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Bunny
 */
public class RegisterCourses extends javax.swing.JFrame {

    /**
     * Creates new form RegisterCourses
     */
    static String id;
Connection con=null;
ResultSet rs=null;
Connection con1=null;
ResultSet rs1=null;
Connection con2=null;
ResultSet rs2=null;
PreparedStatement pst=null;
PreparedStatement pst2=null;
    public RegisterCourses(String s) {
        id=s;
        initComponents();
        
        con= Connect.ConnectDB();
        Get_Data();
        setLocationRelativeTo(null);
    }
    
    private void Get_Data(){
     String sql="select * from courses";
     try{
         pst=con.prepareStatement(sql);
          rs= pst.executeQuery();
         jTable1.setModel(DbUtils.resultSetToTableModel(rs));
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();
          
        }
    }
    
    private void Get_Data1(String sql){
     try{
         pst=con.prepareStatement(sql);
          rs= pst.executeQuery();
         jTable1.setModel(DbUtils.resultSetToTableModel(rs));
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();
          
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setText("Enter a keyword to search for a course based on post-condition");

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Remove Clash");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Click to Remove courses from list clashing with Your Registered Courses");

        jLabel2.setText("Selected Course Name");

        jLabel3.setText("Course Code");

        jLabel5.setText("Course Credits");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel6.setText("Post-Conditions");

        jLabel7.setText("Instructor");

        jButton2.setText("Register Selected Course");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Make sure to remove courses clashing with current Time table");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(39, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private ArrayList<String> sear(String mysql) {
        String ser=jTextField2.getText();
        String sqll;
        ArrayList<String> db=new ArrayList<String>();
        ArrayList<String> db1=new ArrayList<String>();
        try
	{
      con= Connect.ConnectDB();
      
      Statement s = con.createStatement();
     
      s.executeQuery ("SELECT Name,Code ,Post,Acronym FROM courses");
      rs = s.getResultSet ();
      
      while (rs.next ())
      {
    	  String nameVal = rs.getString ("Name");
          String ac = rs.getString ("Acronym");
          String idVal = rs.getString ("Code");
          String catVal = rs.getString ("Post");
          String[] words=catVal.split("\\s");
        for(int i=0;i<words.length;i++){
        	if(words[i].toLowerCase().equals(ser.toLowerCase())){
        		db.add(ac);
        		break;
        	}
        }
      }
Iterator itr = db.iterator();
      sqll="select * from coursestt where ";
      while(itr.hasNext()) {
         Object element = itr.next();
         String ad;
         if(itr.hasNext())
             ad=  "Acronym='"+element.toString()+"' or ";
         else
             ad=  "Acronym='"+element.toString()+"' ";
         sqll=sqll+ad;
      }
      con1= Connect.ConnectDB();
      Statement s1 = con1.createStatement();
      s1.executeQuery (sqll);
      rs1 = s1.getResultSet ();
      
      
      while (rs1.next ())
      {
          con2= Connect.ConnectDB();
      Statement s2 = con2.createStatement();
      s2.executeQuery (mysql);
      rs2 = s2.getResultSet ();
          int flg=0;
          int MonCT = rs1.getInt("MonCT");
          int TueCT = rs1.getInt("TueCT");
          int WedCT = rs1.getInt("WedCT");
          int ThurCT = rs1.getInt("ThurCT");
          int FriCT = rs1.getInt("FriCT");
          System.out.println(MonCT);
          while (rs2.next ())
      {
    	  int MonCT1 = rs2.getInt("MonCT");
          int TueCT1 = rs2.getInt("TueCT");
          int WedCT1 = rs2.getInt("WedCT");
          int ThurCT1 = rs2.getInt("ThurCT");
          int FriCT1 = rs2.getInt("FriCT");
          System.out.println(MonCT1);
          if(MonCT1==MonCT && MonCT1!=-1 && MonCT!=-1)
              flg=1;
          if(TueCT1==TueCT && TueCT1!=-1 && TueCT!=-1)
              flg=1;
          if(WedCT1==WedCT && WedCT1!=-1 && WedCT!=-1)
              flg=1;
          if(ThurCT1==ThurCT && ThurCT1!=-1 && ThurCT!=-1)
              flg=1;
          if(FriCT1==FriCT && FriCT1!=-1 && FriCT!=-1)
              flg=1;
      }
          if(flg==0){
              db1.add(rs1.getString("Acronym"));
              System.out.println(rs1.getString("Acronym"));
          }
      }
      
    }
    catch (Exception e)
    {
      System.err.println("Got an exception! ");
      System.err.println(e.getMessage());
    }
        return db1;
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String ser=jTextField2.getText();
        try
	{
      con= Connect.ConnectDB();
      
      Statement s = con.createStatement();
     
      s.executeQuery ("SELECT Name,Code ,Post,Acronym FROM courses");
      rs = s.getResultSet ();
      ArrayList<String> db=new ArrayList<String>();
      while (rs.next ())
      {
    	  String nameVal = rs.getString ("Name");
          String ac = rs.getString ("Acronym");
          String idVal = rs.getString ("Code");
          String catVal = rs.getString ("Post");
          String[] words=catVal.split("\\s");
        for(int i=0;i<words.length;i++){
        	if(words[i].toLowerCase().equals(ser.toLowerCase())){
        		db.add(ac);
        		break;
        	}
        }
          /*System.out.println (
                  "id = " + idVal + ", name = " + nameVal
                  + ", category = " + catVal);*/
         
      }
Iterator itr = db.iterator();
      String sqll="select * from courses where ";
      while(itr.hasNext()) {
         Object element = itr.next();
         String ad;
         if(itr.hasNext())
             ad=  "Acronym='"+element.toString()+"' or ";
         else
             ad=  "Acronym='"+element.toString()+"' ";
         sqll=sqll+ad;
      }
      Get_Data1(sqll);
    }
    catch (Exception e)
    {
      System.err.println("Got an exception! ");
      System.err.println(e.getMessage());
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int a=0;
        String c1,c2,c3,c4,c5,c6,c7;
        try
        {
        con= Connect.ConnectDB();
      
      Statement s = con.createStatement();
     String sql="SELECT * FROM studentcourses WHERE ID='"+id+"'";
      s.executeQuery (sql);
      rs = s.getResultSet ();
      ArrayList<String> db=new ArrayList<String>();
      ArrayList<String> db1=new ArrayList<String>();
      while (rs.next ())
      {
    	  c1 = rs.getString ("Course1");
          c2 = rs.getString ("Course2");
          c3 = rs.getString ("Course3");
          c4 = rs.getString ("Course4");
          c5 = rs.getString ("Course5");
          c6 = rs.getString ("Course6");
          c7 = rs.getString ("Course7");
          if(c1!=null)
              db.add(c1);
          if(c2!=null)
              db.add(c2);
          if(c3!=null)
              db.add(c3);
          if(c4!=null)
              db.add(c4);
          if(c5!=null)
              db.add(c5);
          if(c6!=null)
              db.add(c6);
          if(c7!=null)
              db.add(c7);
      }
          Iterator itr = db.iterator();
      String sqll="select * from coursestt where ";
      while(itr.hasNext()) {
         Object element = itr.next();
         String ad;
         if(itr.hasNext())
             ad=  "Acronym='"+element.toString()+"' or ";
         else
             ad=  "Acronym='"+element.toString()+"' ";
         sqll=sqll+ad;
      }
      db1=sear(sqll);
         Iterator itr2 = db1.iterator();
      String sqll2="select * from courses where ";
      while(itr2.hasNext()) {
         Object element = itr2.next();
         String ad;
         if(itr2.hasNext())
             ad=  "Acronym='"+element.toString()+"' or ";
         else
             ad=  "Acronym='"+element.toString()+"' ";
         sqll2=sqll2+ad;
      }
      Get_Data1(sqll2);
      }
    catch (Exception e)
    {
      System.err.println("Got an exception! ");
      System.err.println(e.getMessage());
    } 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row= jTable1.getSelectedRow();
            String table_click1= jTable1.getModel().getValueAt(row, 0).toString();
            jTextField1.setText(table_click1);
            //String table_click2= jTable1.getModel().getValueAt(row, 1).toString();
            String table_click3= jTable1.getModel().getValueAt(row, 5).toString();
            jTextField3.setText(table_click3);
            String table_click4= jTable1.getModel().getValueAt(row, 2).toString();
            jTextField4.setText(table_click4);
            String table_click5= jTable1.getModel().getValueAt(row, 7).toString();
            jTextArea1.setText(table_click5);
            String table_click6= jTable1.getModel().getValueAt(row, 4).toString();
            jTextField5.setText(table_click6);
            
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jButton1ActionPerformed(evt);
        try
        {
        con= Connect.ConnectDB();
      
      Statement s = con.createStatement();
     String sql="SELECT * FROM studentcourses WHERE ID='"+id+"'";
      s.executeQuery (sql);
      rs = s.getResultSet ();
      String c1="",c2="",to="",sql1;
      while (rs.next ())
      {
    	  c1 = rs.getString ("Course6");
          c2 = rs.getString ("Course7");
          
      }
      if(c1==null)
          to="Course6";
      else if(c2==null)
          to="Course7";
      else
          to="none";
      if(to.equals("none"))
          JOptionPane.showMessageDialog(this,"Maximum Course Limit Reached","Cannot Register Course",JOptionPane.INFORMATION_MESSAGE);
      else{
          sql1="UPDATE studentcourses SET `"+to+"`='"+jTextField3.getText()+"' WHERE  `ID`='"+id+"'";
          pst2=con2.prepareStatement(sql1);
       pst2.execute();}
      
        }
        
       
        
        catch(Exception e)
        {
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterCourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterCourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterCourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterCourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterCourses(id).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
