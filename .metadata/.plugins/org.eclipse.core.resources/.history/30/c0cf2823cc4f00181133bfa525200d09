
	import java.io.*;
	import java.util.*;
	public class Solution {
	public static void main(String[] args) throws IOException {
		input.init(System.in);
		PrintWriter out = new PrintWriter(System.out);
		int n = input.nextInt();
		for(int i = 0; i<n; i++)
		{
			long a = input.nextLong(), b = input.nextLong();
			out.println(go(a-1) ^ go(b));
		}
		out.close();
	}
	static long xorSum(long x)
	{
		long m = x%4;
		if(m == 0) return x;
		else if(m == 1) return 1;
		else if(m == 2) return x+1;
		return 0;
	}
	static long go(long x)
	{
		if(x%2 == 0)
		{
			return xorSum(x/2)<<1;
		}
		else
		{
			long terms = (x+1)/2;
			long res = xorSum(x/2)<<1;
			if(terms%2 == 1) res |= 1;
			return res;
		}
	}
	public static class input {
		static BufferedReader reader;
		static StringTokenizer tokenizer;

		static void init(InputStream input) {
			reader = new BufferedReader(new InputStreamReader(input));
			tokenizer = new StringTokenizer("");
		}

		static String next() throws IOException {
			while (!tokenizer.hasMoreTokens())
				tokenizer = new StringTokenizer(reader.readLine());
			return tokenizer.nextToken();
		}

		static int nextInt() throws IOException {
			return Integer.parseInt(next());
		}

		static double nextDouble() throws IOException {
			return Double.parseDouble(next());
		}

		static long nextLong() throws IOException {
			return Long.parseLong(next());
		}
	}
	}


