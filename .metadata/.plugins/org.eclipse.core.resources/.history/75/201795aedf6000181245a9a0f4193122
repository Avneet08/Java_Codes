import java.util.ArrayList;
import java.util.Scanner;

public class XorPAirs {
	public static void main(String args[]) {
		try {
			Scanner sc = new Scanner(System.in);
			//int T = sc.nextInt();
			//for (int j = 0; j < T; j++) {
				int limit = sc.nextInt();
				int T = sc.nextInt();
				Long arr[] = new Long[limit];
				for (int i = 0; i < limit; i++) {
					arr[i] = sc.nextLong();
				}
				Long C=generateseq(arr,arr.length,T);
				System.out.println(C);
				
				
				
				
			//}
		} catch (Exception e) {
			return;
		}
}
	

	public static long xoring(long xor,long c){
		return (xor^c);
		}
	public static Long generateseq(Long[] arr,int n,int T) {
		//long[] B=new long[n*n];
		ArrayList<Long> matrix=new ArrayList<Long>();
		long Xor=0;
		int count=0;
		for(int i=0;i<n-1;i++) {
			Long x=arr[i]+arr[i+1];
			matrix.add(x);
				Xor=xoring(Xor,x);
				if(Xor>=T) {
					count++;
				}
			}
		
		
		return Xor;
		
		
	}
}
