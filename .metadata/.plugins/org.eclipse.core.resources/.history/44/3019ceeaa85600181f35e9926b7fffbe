import java.math.BigInteger;
import java.util.Arrays;
import java.util.Scanner;

public class FAKEBS {
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		for(int z =0;z<t;z++){
			int N = sc.nextInt();
			int Q = sc.nextInt();
			BigInteger arr[] = new BigInteger[N];
			
			
			for(int i =0;i<N;i++){
				arr[i] = sc.nextBigInteger(); 
				
			}
			BigInteger arr2[] = new BigInteger[N];
			for(int i=0;i<N;i++) {
				arr2[i]=arr[i];
			}
			Arrays.sort(arr);
			for(int y =0;y<Q;y++){
				Long x = sc.nextLong();
				int a= -1;
				/*for(int i =0;i<N;i++){
					if(arr[i].compareTo(BigInteger.valueOf(x))==0){
						a = i;
						break;
					}
				}*/
				
				
				int b_index = Bsearch(arr,x);
				int numlefta = b_index;
				int numrighta = arr2.length - b_index;
				
				int countleft = 0;
				int countright =0;
				int low = 0;
			    int high = arr2.length-1;
			    int mid =0;
			    while(low <= high){
			    	mid = (low + high) / 2;
//			    	System.out.println(mid);
					        if(arr2[mid] .compareTo(BigInteger.valueOf(x))==0){
					            break;
					        }
					        else if(arr2[mid] .compareTo(BigInteger.valueOf(x)) ==-1 && a > mid){
					            low = mid+1;
//					        	System.out.println(a[mid]);
					        }
					        else if(arr2[mid].compareTo(BigInteger.valueOf(x)) ==-1 && a < mid){
					        	high = mid-1;
					        	countright++;
//					        	System.out.println("R " + a[mid]);
					        }
					        else if(arr2[mid].compareTo(BigInteger.valueOf(x)) ==1  && a > mid){
					        	low = mid+1;
					            countleft++;
//					            System.out.println("L " + a[mid]);
					        }
					        else if(arr2[mid].compareTo(BigInteger.valueOf(x)) ==1  && a < mid){
					            high = mid-1;
//					        	System.out.println(a[mid]);
					        }
			    }
			    int totalsum = countleft + countright;
			    if(countleft>numlefta || countright>numrighta){
			    	System.out.println("-1");
			    }
			    else{
			    	System.out.println("total sum is " + totalsum);
//			    	System.out.println(countleft + " " + numlefta);
//			    	System.out.println(countright + " " + numrighta);
			    }
				
			}
		}
	}

	private static int Bsearch(BigInteger[] arr, Long x) {
		// TODO Auto-generated method stub
		    int low = 0;
		    int high = arr.length;
		    int mid =0;
		    while(low <= high){
		    	mid = (low + high) / 2;
				        if(arr[mid] .compareTo(BigInteger.valueOf(x))==0){
				            break;
				        }
				        else if(arr[mid] .compareTo(BigInteger.valueOf(x)) ==-1){
				            low = mid+1;
				        }
				        else{
				            high = mid-1;
				        }
		    }
		    return mid;
	}
}
