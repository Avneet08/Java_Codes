import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class p6 {

		 public static void main (String[] args) throws IOException
		    {
			 Reader.init(System.in);
			 int t=Reader.nextInt();
			 int[] arr=new int[t];
			 for(int i=0;i<t;i++) {
				 arr[i]=Reader.nextInt();
			 }
			 //System.out.println(findbitonic(arr,));
			 int i, j;
			 int n=arr.length;
		        
		        int[] arr1 = new int[n];
		        int[] arr2 = new int [n];
		        i=0;
		       while(i<n){
		            arr1[i] = 1;
		        arr2[i] = 1;
		        i++;
		        }
		        i=1;
		         while( i < n) {
		            for (j = 0; j < i; j++) {
		                if (arr1[i] < arr1[j] + 1 && arr[j] < arr[i]  ) {
		                    arr1[i] = arr1[j] + 1;}
		            }
		            i++;
		        }
		 j=n-1;
		        for (i = n-2; i >= 0; i--) {
		           while(j>i) {
		                if (arr[j] < arr[i] && arr2[i] < arr2[j] + 1) {
		                    arr2[i] = arr2[j] + 1;}
		                j--;
		            }
		        }
		        int max = arr1[0] + arr2[0] - 1;
				  i=1;
			        while ( i < n) {
			            if (arr1[i] + arr2[i] - 1 > max) {
			                max = arr1[i] + arr2[i] - 1;}i++;
			        }
			 System.out.println(max);
		    }
	

}
class Reader {
	static BufferedReader reader;
	static StringTokenizer tokenizer;

	/** call this method to initialize reader for InputStream */
	static void init(InputStream input) {
		reader = new BufferedReader(new InputStreamReader(input));
		tokenizer = new StringTokenizer("");
	}

	/** get next word */
	static String next() throws IOException {
		while (!tokenizer.hasMoreTokens()) {

			tokenizer = new StringTokenizer(reader.readLine());
		}
		return tokenizer.nextToken();
	}

	static int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	static long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	static double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}
}
