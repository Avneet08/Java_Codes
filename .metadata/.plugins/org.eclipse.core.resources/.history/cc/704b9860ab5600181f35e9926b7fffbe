import java.math.BigInteger;
import java.util.Arrays;
import java.util.Scanner;

public class FAKEBS {
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		for(int z =0;z<t;z++){
			int N = sc.nextInt();
			int Q = sc.nextInt();
			BigInteger arr[] = new BigInteger[N];
			
			
			for(int i =0;i<N;i++){
				arr[i] = sc.nextBigInteger(); 
				
			}
			BigInteger arr2[] = new BigInteger[N];
			for(int i=0;i<N;i++) {
				arr2[i]=arr[i];
			}
			Arrays.sort(arr);
			for(int y =0;y<Q;y++){
				Long x = sc.nextLong();
				int a= -1;
				for(int i =0;i<N;i++){
					if(arr[i].compareTo(BigInteger.valueOf(x))==0){
						a = i;
						break;
					}
				}
				for(int i=0;i<N;i++) {
					System.out.print(arr2[i]+" ");
				}
				System.out.println(" ");
				for(int i=0;i<N;i++) {
					System.out.print(arr1[i]+" ");
				}
				makemoves(arr2,arr,x,a);
				
				
			
				
			}
		}
	}
	private static void makemoves(BigInteger arr2[],BigInteger arr[],Long x,int a) {
		int b_index = Bsearch(arr,x);
		int numlefta = b_index;
		int numrighta = arr2.length - b_index;
		int num_left = 0;
		int num_right =0;
		int low = 0;
	    int high = arr2.length-1;
	    int mid =0;
	    while(low <= high){
	    	mid = (low + high) / 2;
			        if(arr2[mid] .compareTo(BigInteger.valueOf(x))==0){
			            break;
			        }
			        else if(arr2[mid] .compareTo(BigInteger.valueOf(x)) ==-1 && a > mid){
			            low = mid+1;
			        }
			        else if(arr2[mid].compareTo(BigInteger.valueOf(x)) ==-1 && a < mid){
			        	high = mid-1;
			        	num_right++;
			        }
			        else if(arr2[mid].compareTo(BigInteger.valueOf(x)) ==1  && a > mid){
			        	low = mid+1;
			        	num_left++;
			        }
			        else if(arr2[mid].compareTo(BigInteger.valueOf(x)) ==1  && a < mid){
			            high = mid-1;
			        }
	    }
	    int totalsum = num_left + num_right;
	    if(num_left>numlefta || num_left>numrighta){
	    	System.out.println("-1");
	    }
	    else{
	    	System.out.println("total sum is " + totalsum);
	    }
	}

	private static int Bsearch(BigInteger[] arr, Long x) {
		// TODO Auto-generated method stub
		    int low = 0;
		    int high = arr.length;
		    int mid =0;
		    while(low <= high){
		    	mid = (low + high) / 2;
				        if(arr[mid] .compareTo(BigInteger.valueOf(x))==0){
				            break;
				        }
				        else if(arr[mid] .compareTo(BigInteger.valueOf(x)) ==-1){
				            low = mid+1;
				        }
				        else{
				            high = mid-1;
				        }
		    }
		    return mid;
	}
}
